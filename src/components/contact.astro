---
import { Image } from 'astro:assets';
import LogoWithoutLetter from '../assets/logo-without-letter.png'

---

<div class="lg:max-w-[75rem] m-auto py-[4rem] gap-16">
  <h2 class="text-base font-extrabold text-primary-500 text-center my-0	m-auto">Contactenos</h2>
  <h3 class="text-3xl fnt-bold text-slate-900 text-center my-0	m-auto mt-2">¿Necesitas simplificar la gestión de certificados?</h3>
  <h3 class="text-3xl font-bold text-slate-900 text-center my-0	m-auto mt-2">Estamos aquí para ayudarte!</h3>

  <div class="lg:flex justify-center mt-20"> 
    <div class="bg-gradient-to-r from-primary-500 to-primary-800 p-10 lg:rounded-s-3xl	">
      <div class="flex gap-4 items-center mb-6">
        <Image src={LogoWithoutLetter} alt="logo" loading="lazy" height={80}/>
        <div>
          <div class="flex gap-4 items-center mb-2">
            <i class="fa-solid fa-phone text-white"></i>
            <p class="text-white">+51 992149752</p>
          </div>
          <div class="flex gap-4 items-center">
            <i class="fa-solid fa-envelope text-white"></i>
            <p class="text-white">digitalcerticorp@gmail.com</p>
          </div>
        </div>
      </div>
      <div>
        <div class="flex gap-4 items-center mb-4">
          <i class="fa-solid fa-signal text-white"></i>
          <p class="text-white">Acceso desde cualquier lugar</p>
        </div>
        <div class="flex gap-4 items-center">
          <i class="fa-solid fa-headset text-white"></i>
          <p class="text-white">Disponible siempre para ayudarte </p>
        </div>
      </div>
    </div>
    <div class="bg-white py-10 px-12 lg:rounded-e-3xl">
      <form class="flex flex-col gap-6 " action="https://api.web3forms.com/submit" method="POST"  >
        <input type="hidden" name="access_key" value={import.meta.env.TOKEN_EMAIL}>
        <input type="hidden" name="subject" value="Contacto Digitalcerti">
        <input
          type="text"
          name="name"
          required
          placeholder="Nombre"
          class="lg:w-80 border border-slate-200 rounded-xl p-2 h-11 text-xs"
        />
        <input
          type="email"
          name="email"
          required
          placeholder="Correo electronico"
          class="lg:w-80 border border-slate-200 rounded-xl p-2 h-11 text-xs"
        />
        <textarea
          name="message"
          required
          placeholder="Tu mensaje"
          class="lg:w-80 border border-slate-200 rounded-xl p-2 text-xs h-36"
          rows="10"
          cols="50"
        />
        <input type="hidden" name="redirect" value={`${Astro.request.url}thank_contact`}>
        <div class="flex justify-end">
          <button
          type="submit"
            class="w-[8.25rem] h-[2.5rem] bg-primary-500 rounded-full text-white font-medium flex justify-center items-center cursor-pointer"
          >
            Enviar
          </button>
        </div>
      </form>
    </div>
  </div>
  <form
  method="POST"
  id="form"
  class="needs-validation"
  data-astro-reload
  novalidate
  >
  
   <!-- Add your Web3Forms Access Key -->
  <input type="hidden" name="access_key" value="c8d12656-86e0-4b4e-aefa-fcee2e29b27f" />
  
  <input type="checkbox" class="hidden" style="display:none" name="botcheck" />
  <div class="mb-5">
    <input
      type="text"
      placeholder="Full Name"
      required
      class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100"
      name="name"
    />
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Please provide your full name.
    </div>
  </div>
  <div class="mb-5">
    <label for="email_address" class="sr-only">Email Address</label><input
      id="email_address"
      type="email"
      placeholder="Email Address"
      name="email"
      required
      class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100"
    />
    <div class="empty-feedback text-red-400 text-sm mt-1">
      Please provide your email address.
    </div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Please provide a valid email address.
    </div>
  </div>
  <div class="mb-3">
    <textarea
      name="message"
      required
      placeholder="Your Message"
      class="w-full px-4 py-3 border placeholder:text-slate-400 rounded-md outline-none h-36 focus:ring-4 border-slate-300 focus:border-slate-600 ring-slate-100"
    ></textarea>
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Please enter your message.
    </div>
  </div>
  <button type="submit" >Send Message</button>
  <div id="result" class="mt-3 text-center"></div>
</form>



</div>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>
<script is:inline>
  // astro:page-load to support view Transitions.
  // use DOMContentLoaded event if you are not using View Transitions

  document.addEventListener(
    "astro:page-load",
    () => {
      const form = document.getElementById("form");
      const result = document.getElementById("result");

      form.addEventListener("submit", function (e) {
        e.preventDefault();
        form.classList.add("was-validated");
        if (!form.checkValidity()) {
          form.querySelectorAll(":invalid")[0].focus();
          return;
        }
        const formData = new FormData(form);
        const object = Object.fromEntries(formData);
        const json = JSON.stringify(object);

        result.innerHTML = "Sending...";

        fetch("https://api.web3forms.com/submit", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
          },
          body: json,
        })
          .then(async (response) => {
            let json = await response.json();
            if (response.status == 200) {
              result.classList.add("text-green-500");
              result.innerHTML = json.message;
            } else {
              console.log(response);
              result.classList.add("text-red-500");
              result.innerHTML = json.message;
            }
          })
          .catch((error) => {
            console.log(error);
            result.innerHTML = "Something went wrong!";
          })
          .then(function () {
            form.reset();
            form.classList.remove("was-validated");
            setTimeout(() => {
              result.style.display = "none";
            }, 5000);
          });
      });
    },
    { once: true },
  );
</script>